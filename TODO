TODO:

  * add in scalatest testing framework + unit tests
  * add physics primitives to AST
  * restructor AST into

  * finish point generation
    ** add inequalities to enforce orientation
    ** add triangles
  * finish AST
    ** add plots
    ** add inequalities to expressions

  * make merging links more precise

  * convert current benchmarks (on benchmarking branch) to linear/nonlinear version
  * find more benchmarks
    ** http://www.malinc.se/math/
    ** JSXGraph
    ** my solar system

ranking:
  * interactions tend to be at connection points
  * penalty for shape w/o interactive components
  * filter out "functionally identical" diagrams...
    ** positional equivalence: all points are in same place + have same links

equations:
  * run point generation on all shapes
  * fuzzy snapping: for all generated points within ~5 of each other:
    ** add in equality between original variables (or 3-way: generated == lhs, generated == rhs)
    ** adjust image to match equality (maybe...or maybe just don't validate synth equations)


distinguish between recursive updates and nonlinear one-way constraints:
  * recursive update semantics are: take old values of variable references.
  * nonlinear semantics are: ignore cycles (i.e. eval each node exactly once),
                             update a la dataflow graph
  * extend values:
    ** CassValues
    ** DFValues
    ** interface:
      *** getValue
      *** suggestValue
      *** evaluate
    ** type system: DFValues can't appear in cass equations and vice versa
  * runtime semantics:
    ** interactions: suggestValue for x, y values. reevaluate both networks.

  * user input:
